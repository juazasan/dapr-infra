#!/bin/bash

source .local/secrets

SUBSCRIPTIONID=$(az account show --query id -o tsv)
TENANTID=$(az account show --query tenantId -o tsv)
myIP=$(dig +short myip.opendns.com @resolver1.opendns.com)
REGION_NAME=eastus
RESOURCE_GROUP=$AKS_CLUSTER_NAME
ACR_NAME=$AKS_CLUSTER_NAME
AKS_VNET_NAME=$AKS_CLUSTER_NAME-vnet
AKS_SUBNET_NAME=kubernetes
AKS_VNET_ADDRESSPACE="10.10.0.0/16"
AKS_SUBNET_ADDRESSSPACE="10.10.224.0/19"
AKS_SYSTEMNODE_COUNT=1
AKS_SYSTEMNODE_MAX_COUNT=3
AKS_SYSTEMNODE_MIN_COUNT=1
AKS_SYSTEMNODE_VM_SIZE=Standard_DS3_v2
AKS_SYSTEMNODE_OS_DISK_SIZE=32
AKS_SYSTEMNODE_OS_DISK_TIER=StandardSSD

# Create resource group

az group create \
    --name $RESOURCE_GROUP \
    --location $REGION_NAME

# Create virtual network

az network vnet create \
    --resource-group $RESOURCE_GROUP \
    --location $REGION_NAME \
    --name $AKS_VNET_NAME \
    --address-prefixes $AKS_VNET_ADDRESSPACE \
    --subnet-name $AKS_SUBNET_NAME \
    --subnet-prefix $AKS_SUBNET_ADDRESSSPACE

AKS_SUBNET_ID=$(az network vnet subnet show \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $AKS_VNET_NAME \
    --name $AKS_SUBNET_NAME \
    --query id -o tsv)

# Provision an ACR

az acr create \
    --resource-group $RESOURCE_GROUP \
    --location $REGION_NAME \
    --name $ACR_NAME \
    --sku Basic

ACR_ENDPOINT=$(az acr show -g $RESOURCE_GROUP --name $ACR_NAME --query loginServer -o tsv)

# Deploy AKS Cluster using latest supported version

VERSION=$(az aks get-versions \
    --location $REGION_NAME \
    --query 'orchestrators[?!isPreview] | [-1].orchestratorVersion' \
    --output tsv)

az aks create \
--name $AKS_CLUSTER_NAME \
--resource-group $RESOURCE_GROUP \
--location $REGION_NAME \
--kubernetes-version $VERSION \
--api-server-authorized-ip-ranges $myIP \
--enable-pod-identity \
--enable-managed-identity \
--enable-addons azure-policy \
--vm-set-type VirtualMachineScaleSets \
--max-pods 50 \
--enable-cluster-autoscaler \
--node-count $AKS_SYSTEMNODE_COUNT \
--min-count $AKS_SYSTEMNODE_MIN_COUNT \
--max-count $AKS_SYSTEMNODE_MAX_COUNT \
--node-vm-size $AKS_SYSTEMNODE_VM_SIZE \
--node-osdisk-type Ephemeral \
--load-balancer-sku standard \
--network-plugin azure \
--network-policy azure \
--vnet-subnet-id $AKS_SUBNET_ID \
--service-cidr 10.255.0.0/16 \
--dns-service-ip 10.255.0.10 \
--docker-bridge-address 172.17.0.1/16 \
--attach-acr $ACR_NAME \
--generate-ssh-keys \
--yes

# Configure kubectl

az aks get-credentials \
    --resource-group $RESOURCE_GROUP \
    --name $AKS_CLUSTER_NAME

# Setting Azure Files as default storageclass

kubectl patch storageclass default -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
kubectl patch storageclass azurefile -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'

# Creating ClusterRoles required

kubectl create clusterrole secret-reader --verb=get --verb=list --verb=watch --resource=secrets

